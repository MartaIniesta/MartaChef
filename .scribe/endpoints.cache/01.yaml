## Autogenerated by Scribe. DO NOT MODIFY.

name: Publicación
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/posts
    metadata:
      groupName: Publicación
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Obtiene una lista de posts públicos ordenados por ID.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          [
            {
              "id": 1,
              "title": "Post Title",
              "description": "Post Description",
              "ingredients": "ingredient1, ingredients2",
              "image": "image_url",
              "visibility": "public",
              "user": {
                   "id": 1,
                   "name": "Pepe"
              },
              "categories": [...],
              "tags": [...]
            },
            ...
          ]
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/posts/{id}'
    metadata:
      groupName: Publicación
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Muestra una publicación específica.
        Solo se podrá ver si el usuario es propietario o el post es publico.
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the post.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      post:
        name: post
        description: 'Requiere el ID de la publicación.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 2
      post: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          [
             {
               "id": 1,
               "title": "Post Title",
               "description": "Post Description",
               "ingredients": "ingredient1, ingredients2",
               "image": "image_url",
               "visibility": "public",
               "user": {
                    "id": 1,
                    "name": "Pepe"
               },
               "categories": [...],
               "tags": [...]
             },
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
            "error": "No autorizado"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/posts
    metadata:
      groupName: Publicación
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Crea una nueva publicación para el usuario autenticado.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'El título de la publicación.'
        required: false
        example: '"Delicious Cake"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      description:
        name: description
        description: 'La descripción de la publicación.'
        required: false
        example: '"This is a recipe for a delicious cake."'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      ingredients:
        name: ingredients
        description: 'Los ingredientes necesarios.'
        required: false
        example: '"Flour, Eggs, Sugar"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      visibility:
        name: visibility
        description: 'La visibilidad de la publicación.'
        required: false
        example: '"public"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      categories:
        name: categories
        description: 'Los IDs de las categorías asociadas a la publicación.'
        required: false
        example:
          - 1
          - 2
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      tags:
        name: tags
        description: 'Etiquetas separadas por espacio.'
        required: false
        example: '"dessert cake"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      image:
        name: image
        description: 'La imagen asociada a la publicación.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      title: '"Delicious Cake"'
      description: '"This is a recipe for a delicious cake."'
      ingredients: '"Flour, Eggs, Sugar"'
      visibility: '"public"'
      categories:
        - 1
        - 2
      tags: '"dessert cake"'
    fileParameters:
      image: null
    responses:
      -
        status: 201
        content: |-
          {
            "id": 1,
            "title": "New Post",
            "description": "Description of new post",
            "ingredients": "ingredient1, ingredients2",
            "visibility": "public",
            "categories": [...],
            "tags": [...],
            "image": "image_url"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "errors": {
              "image": ["The image field is required."]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/posts/{id}'
    metadata:
      groupName: Publicación
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Actualiza una publicación existente.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the post.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      post:
        name: post
        description: 'Requiere el ID de la publicación.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 2
      post: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'El título de la publicación.'
        required: false
        example: '"Updated Post"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      description:
        name: description
        description: 'La descripción actualizada.'
        required: false
        example: '"Updated description"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      ingredients:
        name: ingredients
        description: 'Los ingredientes actualizados.'
        required: false
        example: '"Updated ingredients"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      visibility:
        name: visibility
        description: 'La visibilidad actualizada.'
        required: false
        example: '"private"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      categories:
        name: categories
        description: 'Los IDs de las categorías actualizadas.'
        required: false
        example:
          - 1
          - 3
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      tags:
        name: tags
        description: 'Etiquetas separadas por espacio.'
        required: false
        example: '"updated tag"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      image:
        name: image
        description: 'La nueva imagen de la publicación.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      title: '"Updated Post"'
      description: '"Updated description"'
      ingredients: '"Updated ingredients"'
      visibility: '"private"'
      categories:
        - 1
        - 3
      tags: '"updated tag"'
    fileParameters:
      image: null
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Post actualizado correctamente.",
            "post": {
              "id": 1,
              "title": "Updated Post",
              "description": "Updated description",
              "ingredients": "ingredient1, ingredients2",
              "visibility": "private",
              "categories": [...],
              "tags": [...],
              "image": "new_image_url"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "errors": {
              "image": ["The image field is required."]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/posts/{id}'
    metadata:
      groupName: Publicación
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Elimina una publicación.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the post.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      post:
        name: post
        description: 'Requiere el ID de la publicación a eliminar.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 2
      post: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "Post eliminado correctamente"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/myPosts
    metadata:
      groupName: Publicación
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Obtiene las publicaciones de un usuario autenticado, sin tener en cuenta su visibilidad.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          [
              {
                "id": 1,
                "title": "Post Title",
                "description": "Post Description",
                "ingredients": "ingredient1, ingredients2",
                "image": "image_url",
                "visibility": "private",
                "user": {
                     "id": 1,
                     "name": "Pepe"
                },
                "categories": [...],
                "tags": [...]
              },
            ...
          ]
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "error": "No autenticado"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/sharedPosts
    metadata:
      groupName: Publicación
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Obtiene las publicaciones compartidas de los usuarios seguidos.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          [
              {
                "id": 1,
                "title": "Post Title",
                "description": "Post Description",
                "ingredients": "ingredient1, ingredients2",
                "image": "image_url",
                "visibility": "shared",
                "user": {
                     "id": 1,
                     "name": "Pepe"
                },
                "categories": [...],
                "tags": [...]
              },
            ...
          ]
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "error": "No autenticado"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
