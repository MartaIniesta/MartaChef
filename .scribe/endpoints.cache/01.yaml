## Autogenerated by Scribe. DO NOT MODIFY.

name: Posts
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/posts
    metadata:
      groupName: Posts
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Devuelve una lista de Posts públicos ordenados por ID.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          [
            {
              "id": 1,
              "title": "Post Title",
              "description": "Post Description",
              "ingredients": "ingredient1, ingredients2",
              "image": "image_url",
              "visibility": "public",
              "user": {
                   "id": 1,
                   "name": "Pepe"
              },
              "categories": [...],
              "tags": [...]
            },
            ...
          ]
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/posts/{id}'
    metadata:
      groupName: Posts
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'ID del post.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 1,
            "title": "Post Title",
            "description": "Post Description",
            "ingredients": "ingredient1, ingredient2",
            "image": "image_url",
            "visibility": "public",
            "user": {
                "id": 1,
                "name": "Pepe"
            },
            "categories": [...],
            "tags": [...]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
            "error": "No autorizado"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "error": "El post no existe."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 6g43cv8PD1aE5beadkZfhV6
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/posts
    metadata:
      groupName: Posts
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'Título del Post.'
        required: true
        example: 'Tarta de chocolate'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      description:
        name: description
        description: 'Descripción del Post.'
        required: true
        example: 'Esta es una deliciosa tarta de chocolate.'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      ingredients:
        name: ingredients
        description: 'Ingredientes separados por coma.'
        required: true
        example: 'Harina, Huevos, Azucar'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      visibility:
        name: visibility
        description: 'Visibilidad del Post: public, private, o shared.'
        required: true
        example: public
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      categories:
        name: categories
        description: 'IDs de las categorías asociadas (máximo 4).'
        required: true
        example:
          - 1
          - 2
          - 3
          - 4
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      tags:
        name: tags
        description: 'optional Etiquetas separadas por espacio.'
        required: false
        example: '#Tarta #Chocolate'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      image:
        name: image
        description: 'Imagen asociada al Post.'
        required: true
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      title: 'Tarta de chocolate'
      description: 'Esta es una deliciosa tarta de chocolate.'
      ingredients: 'Harina, Huevos, Azucar'
      visibility: public
      categories:
        - 1
        - 2
        - 3
        - 4
      tags: '#Tarta #Chocolate'
    fileParameters:
      image: null
    responses:
      -
        status: 201
        content: |-
          {
            "message": "Post creado con éxito.",
            "data": {
              "id": 1,
              "title": "Tarta de chocolate",
              ...
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "errors": {
              "image": ["La imagen es requerida."]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 6g43cv8PD1aE5beadkZfhV6
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/posts/{id}'
    metadata:
      groupName: Posts
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the post.'
        required: true
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 5
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'Título actualizado.'
        required: true
        example: 'Tarta actualizada'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      description:
        name: description
        description: 'Descripción actualizada.'
        required: true
        example: 'Una mejor version de la tarta de chocolate.'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      ingredients:
        name: ingredients
        description: 'Ingredientes actualizados.'
        required: true
        example: 'Azucar, Mantequilla, Harina'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      visibility:
        name: visibility
        description: 'Visibilidad: public, private, o shared.'
        required: true
        example: private
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      categories:
        name: categories
        description: 'IDs de las nuevas categorías.'
        required: true
        example:
          - 1
          - 2
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      tags:
        name: tags
        description: 'optional Nuevas etiquetas separadas por espacio.'
        required: false
        example: '#Actualizada #Deliciosa'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      image:
        name: image
        description: 'optional Nueva imagen (requerida si no hay imagen previa).'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      title: 'Tarta actualizada'
      description: 'Una mejor version de la tarta de chocolate.'
      ingredients: 'Azucar, Mantequilla, Harina'
      visibility: private
      categories:
        - 1
        - 2
      tags: '#Actualizada #Deliciosa'
    fileParameters:
      image: null
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Post actualizado con éxito.",
            "data": {
              "id": 1,
              "title": "Tarta actualizada",
              ...
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "errors": {
              "title": ["El campo título es obligatorio."],
              "categories": ["Debe seleccionar entre 1 y 4 categorías."]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 6g43cv8PD1aE5beadkZfhV6
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/posts/{id}'
    metadata:
      groupName: Posts
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the post.'
        required: true
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 5
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "Post eliminado correctamente"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
            "error": "No autorizado"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "error": "El post no existe."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 6g43cv8PD1aE5beadkZfhV6
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/myPosts
    metadata:
      groupName: Posts
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          [
            {
              "id": 1,
              "title": "Post Title",
              "description": "Post Description",
              "ingredients": "ingredient1, ingredient2",
              "image": "image_url",
              "visibility": "private",
              "user": {
                "id": 1,
                "name": "Pepe"
              },
              "categories": [...],
              "tags": [...]
            },
            ...
          ]
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "error": "No autenticado"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 6g43cv8PD1aE5beadkZfhV6
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/sharedPosts
    metadata:
      groupName: Posts
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          [
            {
              "id": 1,
              "title": "Post Title",
              "description": "Post Description",
              "ingredients": "ingredient1, ingredient2",
              "image": "image_url",
              "visibility": "shared",
              "user": {
                "id": 1,
                "name": "Pepe"
              },
              "categories": [...],
              "tags": [...]
            },
            ...
          ]
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "error": "No autenticado"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 6g43cv8PD1aE5beadkZfhV6
    controller: null
    method: null
    route: null
    custom: []
